// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// UpdateSnapshotScheduleRequest update snapshot schedule request
// swagger:model UpdateSnapshotScheduleRequest
type UpdateSnapshotScheduleRequest struct {

	// cluster checkpoint interval min
	ClusterCheckpointIntervalMin int64 `json:"clusterCheckpointIntervalMin,omitempty"`

	// cluster Id
	ClusterID string `json:"clusterId,omitempty"`

	// daily snapshot retention days
	DailySnapshotRetentionDays int64 `json:"dailySnapshotRetentionDays,omitempty"`

	// group Id
	GroupID string `json:"groupId,omitempty"`

	// monthly snapshot retention months
	MonthlySnapshotRetentionMonths int64 `json:"monthlySnapshotRetentionMonths,omitempty"`

	// point in time window hours
	PointInTimeWindowHours int64 `json:"pointInTimeWindowHours,omitempty"`

	// snapshot interval hours
	SnapshotIntervalHours int64 `json:"snapshotIntervalHours,omitempty"`

	// snapshot retention days
	SnapshotRetentionDays int64 `json:"snapshotRetentionDays,omitempty"`

	// weekly snapshot retention weeks
	WeeklySnapshotRetentionWeeks int64 `json:"weeklySnapshotRetentionWeeks,omitempty"`
}

// Validate validates this update snapshot schedule request
func (m *UpdateSnapshotScheduleRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateSnapshotScheduleRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateSnapshotScheduleRequest) UnmarshalBinary(b []byte) error {
	var res UpdateSnapshotScheduleRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
